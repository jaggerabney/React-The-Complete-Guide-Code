{"version":3,"file":"static/js/884.123578e1.chunk.js","mappings":"uOACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,ECHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCuEnI,EAhEkB,SAACH,GACjB,OAAsCI,EAAAA,EAAAA,WAAS,GAAM,eAA9CC,EAAW,KAAEC,EAAc,KAE5BC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAqBrB,OACE,iCACE,SAAC,KAAM,CACLE,KAAML,EACNM,QAAS,iBACP,gEAAgE,KAGpE,SAAC,EAAI,WACH,kBACEV,UAAWC,EACXU,QAnBR,WACEN,GAAe,EACjB,EAkBQO,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBT,EAAeU,QAAQC,MACvCC,EAAcV,EAAaQ,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAsBoC,UAE3BnB,EAAMuB,YACL,gBAAKtB,UAAWC,EAAgB,UAC9B,SAACsB,EAAA,EAAc,OAInB,iBAAKvB,UAAWC,EAAgB,WAC9B,kBAAOuB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKrB,QAEtC,iBAAKN,UAAWC,EAAgB,WAC9B,kBAAOuB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKnB,QAEpC,gBAAKR,UAAWC,EAAgB,UAC9B,mBAAQD,UAAU,MAAM6B,QAjClC,SAAsBhB,GACpBR,GAAe,EACjB,EA+BwD,gCAQ1D,EC5CA,MAnBA,SAAkBN,GAChB,OAAgC+B,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAUC,EAAAA,EAAAA,MAYhB,OAVAC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,UAEjB,GAAG,CAACJ,EAAQC,KAOV,SAAC,EAAS,CAACZ,UAAsB,YAAXW,EAAsBd,WAL9C,SAAyBmB,GACvBN,EAAYM,EACd,GAKF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__c7Ivj\"};","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__HMwBQ\",\"loading\":\"QuoteForm_loading__lIFZH\",\"control\":\"QuoteForm_control__MrO8u\",\"actions\":\"QuoteForm_actions__rUc0t\"};","import { useRef, useState } from \"react\";\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport Card from \"../UI/Card\";\r\n\r\nimport classes from \"./QuoteForm.module.css\";\r\n\r\nconst QuoteForm = (props) => {\r\n  const [formFocused, setFormFocused] = useState(false);\r\n\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  function formFocusHandler() {\r\n    setFormFocused(true);\r\n  }\r\n\r\n  function clickHandler(event) {\r\n    setFormFocused(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Prompt\r\n        when={formFocused}\r\n        message={() =>\r\n          \"Are you sure you want to leave? All entered data will be lost.\"\r\n        }\r\n      />\r\n      <Card>\r\n        <form\r\n          className={classes.form}\r\n          onFocus={formFocusHandler}\r\n          onSubmit={submitFormHandler}\r\n        >\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"author\">Author</label>\r\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"text\">Text</label>\r\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button className=\"btn\" onClick={clickHandler}>\r\n              Add Quote\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addQuote } from \"../lib/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\n\r\nfunction NewQuote(props) {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  function addQuoteHandler(quoteData) {\r\n    sendRequest(quoteData);\r\n  }\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n}\r\n\r\nexport default NewQuote;\r\n"],"names":["props","className","classes","children","useState","formFocused","setFormFocused","authorInputRef","useRef","textInputRef","when","message","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}